{
  "overrides": [
    {
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint"],
      "rules": {
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "typeLike",
            "format": ["PascalCase", "UPPER_CASE"]
          },
          {
            "selector": "class",
            "modifiers": ["exported"],
            "format": ["PascalCase"]
          },
          {
            "selector": "class",
            "modifiers": ["exported", "abstract"],
            "format": ["PascalCase"],
            "prefix": ["Abstract"]
          },
          {
            "selector": "function",
            "modifiers": ["exported"],
            "format": ["camelCase"]
          },
          {
            "selector": "interface",
            "modifiers": ["exported"],
            "format": ["PascalCase"]
          },
          {
            "selector": "variable",
            "modifiers": ["destructured"],
            "format": null
          },
          {
            "selector": "variable",
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "modifiers": ["global"],
            "format": ["UPPER_CASE", "camelCase", "PascalCase"]
          },
          {
            "selector": "variable",
            "modifiers": ["exported"],
            "format": ["UPPER_CASE", "camelCase", "PascalCase"]
          },
          {
            "selector": "class",
            "modifiers": ["abstract"],
            "format": ["PascalCase"],
            "prefix": ["Abstract"]
          },
          {
            "selector": "enum",
            "format": ["StrictPascalCase"],
            "suffix": ["Enum"]
          },
          {
            "selector": "enum",
            "modifiers": ["exported"],
            "format": ["StrictPascalCase"],
            "suffix": ["Enum"]
          },
          {
            "selector": "enumMember",
            "format": ["StrictPascalCase"]
          },
          {
            "selector": "classMethod",
            "format": ["strictCamelCase"],
            "filter": {
              "regex": "(HTML|JSON|CVC|CVCChange|DOM)$",
              "match": false
            }
          }
        ]
      }
    }
  ]
}
